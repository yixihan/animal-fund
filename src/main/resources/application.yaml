server:
  # 压缩配置
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
    min-response-size: 1024
  # 运行端口
  port: 18997

spring:
  # 配置文件引入
  profiles:
    active: dev

  # 格式化配置
  jackson:
    serialization:
      indent_output: true
    date-format: yyyy-MM-dd HH:mm:ss
    default-property-inclusion: non_empty
    locale: zh_CN
    time-zone: GMT+8

  # 运行对 bean 进行重写
  main:
    allow-bean-definition-overriding: true

  # 数据库配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${animal.mysql.host}:${animal.mysql.port}/${animal.mysql.db}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8
    username: ${animal.mysql.username}
    password: ${animal.mysql.password}
    druid:
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username: ${animal.mysql.druid.username}
        login-password: ${animal.mysql.druid.password}
      filter:
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true

  # redis 配置
  redis:
    host: ${animal.redis.host}
    port: ${animal.redis.port}
    database: ${animal.redis.db}
    password: ${animal.redis.password}

  #邮件发送配置
  mail:
    username: ${animal.mail.username}
    password: ${animal.mail.password}
    host: smtp.qq.com
    # 开启加密授权验证
    properties:
      mail:
        smtp:
          ssl:
            enable:
              true


# 权限认证
security:
  # controller 所在包
  controller-package: com.wjq.af.controller
  # 白名单列表
  ignore:
    urls:
      # druid 相关
      - "/druid/**"
      # swagger 相关
      - "/swagger-ui/**"
      - "/webjars/**"
      - "/swagger-resources/**"
      - "/v3/**"
      - "/actuator/**"
      # 静态资源
      - "/**/*.js"
      - "/**/*.css"
      - "/**/*.html"
      - "/**/*.json"
      # 认证
      - "/auth/**"
      # 注册
      - "/open/user/register/user"
      # 第三方服务
      - "/open/thirdpart/**"


# mybatis-plus配置
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:mapper/**Mapper.xml
  type-aliases-package: com.wjq.af.pojo

  # 逻辑删除
  global-config:
    db-config:
      logic-delete-field: delFlag  # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)

# 第三方服务
thirdpart:
  # 验证码
  code:
    # 验证码长度
    length: 5
    # 验证码有效期, 单位:分钟
    time-out: 10
    # redis key
    common-key: code:common:%s

  # oss 配置
  oss:
    access-key: ${animal.oss.access-key}
    secret-key: ${animal.oss.secret-key}
    endpoint: ${animal.oss.endpoint}
    bucket-name: ${animal.oss.bucket-name}
    host: ${animal.oss.host}

  # 邮件配置
  email:
    # 邮件发送人姓名
    send-email: ${animal.mail.username}
    title: ${animal.name}

    # redis key
    update-password-key: email:update-password:%s
    common-key: email:common:%s


# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*" # 开放所有端点 默认值只打开 health 和 info 两个端点
  endpoint:
    # health 端点配置项
    health:
      enabled: true
      show-details: always # 永远展示完整信息
