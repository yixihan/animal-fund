server:
  # 压缩配置
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
    min-response-size: 1024
  # 运行端口
  port: 18997

spring:
  # 格式化配置
  jackson:
    serialization:
      indent_output: true
    date-format: yyyy-MM-dd HH:mm:ss
    default-property-inclusion: non_empty
    locale: zh_CN
    time-zone: GMT+8

  # 运行对 bean 进行重写
  main:
    allow-bean-definition-overriding: true

  # 数据库配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/animal_fund?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8
    username: root
    password: 123456
    druid:
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username: admin
        login-password: admin
      filter:
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true

  # redis 配置
  redis:
    host: localhost
    port: 6379
    database: 3
    password: 123456

  #邮件发送配置
  mail:
    username: qq email
    password: password
    host: smtp.qq.com
    # 开启加密授权验证
    properties:
      mail:
        smtp:
          ssl:
            enable:
              true

# oss 配置
oss:
  access-key: access-key
  secret-key: secret-key
  endpoint: endpoint
  bucket-name: bucket-name
  host: host

# 短信配置
mobile:
  secretId: secretId
  secretKey: secretKey
  smsSdkAppId: smsSdkAppId
  signName: signName

# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*" # 开放所有端点 默认值只打开 health 和 info 两个端点
  endpoint:
    # health 端点配置项
    health:
      enabled: true
      show-details: always # 永远展示完整信息
